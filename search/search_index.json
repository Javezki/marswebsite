{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>MARS, TMU's Model Rocket Society, is organized into two main divisions: research and competition.</p> <p>In the competition division, ten teams compete to launch the best rocket. Workshops are held to teach the teams CAD, Open Rocket, GitHub, KiCad, Linux, soldering, Arduino, and ANSYS. Teams have to go through design reviews and are scored based on their documentation. Teams are taught how to make the \"default rocket.\" The competition division is geared towards beginners/first-years, but experienced rocketeers are welcome to join and make their own rocket too.</p> <p>The research division focuses on advancing the rockets and the technology. This is achieved by developing new things such as TVC, custom PCBs, building the launch pad, and developing code. The research division works somewhat on a per-project basis. All project documentation is made openly available, including CAD files and code, and tutorials are built off of it.</p> <p>There is also a third division just for logistics. This team oversees the competition and research divisions, the budget, organizes events, and creates future plans for the team.</p> <p>Many people are in multiple divisions.</p> <p>Check out our google drive and github. This website is run on this repo, join our discord. This website is designed to last many generations, and to be as easy to contribute to as possible.</p>"},{"location":"Competition-Status/","title":"Status Page","text":"<p>We will keep this page up to date with the current status of where there teams should be at, and where the logistics are at. Check the bottom of this page to see when it was last updated.</p>"},{"location":"Competition-Status/#teams-status","title":"Teams Status","text":"<p>By now your team should have a decent CAD of your rocket. You should have used the BOM from the Rocket Guide. Half of the teams have done the PDR, which is meant to showcase your current progress. This is not a requirement but you loose 15% on the marking if you opt out of it. </p> <p>As always feel free to reach out in your team specific discord channel if you are feeling confused about anything! </p>"},{"location":"Competition-Status/#our-status","title":"Our status","text":"<p>We are now giving out fuselages, motor mounts, and parachutes. Each team will be contacted to set up a time to pick up their supplies!</p>"},{"location":"Guidelines/","title":"Guidelines","text":"<p>We have various documentation that teems will likely want to reference when they are setting up their avionics and rocket. In this section we will document it.</p>"},{"location":"Guidelines/Avionics-Guide/","title":"Overview","text":"<p>In this section we will provide an overview of the avionics.</p> <p> This is the board the teams will be using.  </p>"},{"location":"Guidelines/Avionics-Guide/flight-computer/","title":"Flight Computer","text":"<p>In this section we will talk about how to solder and program the default flight computer. </p>"},{"location":"Guidelines/Avionics-Guide/flight-computer/#soldering","title":"Soldering","text":""},{"location":"Guidelines/Avionics-Guide/flight-computer/#programming","title":"Programming","text":""},{"location":"Guidelines/Avionics-Guide/ground-station/","title":"Ground Station","text":"<p>The ground station is a raspberry pi with an HC-12 connected to it running this python code:</p> <pre><code>import serial\nimport os\nimport csv\n\n# Function to create a new file name\ndef create_new_file_name(directory, base_name):\n    counter = 1\n    while True:\n        new_name = f\"{base_name}{counter}.csv\"\n        full_path = os.path.join(directory, new_name)\n        if not os.path.exists(full_path):\n            return full_path\n        counter += 1\n\n# Create a new directory if it doesn't exist\ndirectory = \"data\"\nif not os.path.exists(directory):\n    os.makedirs(directory)\n\n# Open serial port\nser = serial.Serial('/dev/serial0', baudrate=9600)\n\n# Generate a new file name\nfile_name = create_new_file_name(directory, \"1\")\n\n# Open the CSV file for writing\nwith open(file_name, mode='w') as file:\n    current_message = \"\"\n    while True:\n        data = ser.read().decode(\"utf-8\", errors='ignore')\n        if data == '\\n':\n            if current_message:\n                # Write the message to the CSV file\n                file.write(current_message + '\\n')\n                file.flush()\n                current_message = \"\"\n        else:\n            current_message += data\n</code></pre>"},{"location":"Guidelines/Avionics-Guide/ground-station/#raspberry-pi-antenna-channel-select","title":"Raspberry Pi Antenna channel select:","text":"<p>Using Minicom for writing a serial. Don't forget to set baud rate in minicom settings ($sudo minicom -s). Using the send message feature to send messages. ($^a s). Don't forget to change the serial port to serial0 in the minicom settings.</p> <p>To communicate with the HC-12 make sure to set the \u201cset\u201d pin to low. Use the ASCII protocol to communicate with it. Write your commands in .txt files in the ~ directory. Find the commands in the datasheet.</p> <p>To communicate with the HC-12 make sure to set the \u201cset\u201d pin to low. Use the ASCII protocol to communicate with it. Write your commands in .txt files in the ~ directory. Find the commands in the datasheet.</p>"},{"location":"Guidelines/Avionics-Guide/ground-station/#teensy-antenna-channel-select","title":"Teensy Antenna channel select:","text":"<p>Connected the set pin to pin 2 on the teensy. Using this guide, write the code.</p>"},{"location":"Guidelines/Competition-Guidelines/","title":"Competition Guidelines","text":""},{"location":"Guidelines/Competition-Guidelines/#outline","title":"Outline","text":"<p>The competition will be happening at CRC on May 18th. Each team will SSH into their raspberry pi and establish communication with their flight computer. A live stream of data should be recorded in real time. One by one, teams will launch and recover their rockets. After the flight, SD cards from the flight computer will be given to the judges for verification. We don't want to have post flight presentations. Instead, each team will have 30 minutes to submit a final pull request to the website. This will include graphs and gifs of their flight. Teams will have to prepare methods of interpreting and posting their data and gifs.</p>"},{"location":"Guidelines/Competition-Guidelines/#marking-schemes","title":"Marking Schemes","text":""},{"location":"Guidelines/Competition-Guidelines/#pdr","title":"PDR","text":"<p>Each team was marked based on the following rubric.</p> Criteria Level 1 Level 2 Level 3 Level 4 Group has team name? Team members are listed? Table of contents? (optional) Team Logo? (optional) Slide Formatting Parameters and Constraints Open Rocket Analysis Aerodynamic Analysis CAD Design Manufacturing Process Explanation Team Status Time Limit Eye Contact Voice and Clarity Enthusiasm"},{"location":"Guidelines/Competition-Guidelines/#avionics","title":"Avionics","text":"<ul> <li>Soldering</li> <li>Code</li> </ul>"},{"location":"Guidelines/Competition-Guidelines/#structures","title":"Structures","text":"<p>Teams will be marks on the construction and design of their rockets. This marking will be done before flight in a \"safety review.\"</p>"},{"location":"Guidelines/Competition-Guidelines/#launch-day","title":"Launch Day","text":"<p>Teams will be marked on their professionalism and performance of their avionics and rockets, as well as ability to adapt to problems. </p>"},{"location":"Guidelines/Competition-Guidelines/#post-launch","title":"Post Launch","text":""},{"location":"Guidelines/Competition-Guidelines/#documentation","title":"Documentation","text":"<p>Each team will be marked on their documentation which should be contributed to their teams section on the github. Teams are encouraged to contribute to the git repo at any time. There will be tutorials on how to make pull requests.</p>"},{"location":"Guidelines/Competition-Guidelines/#pfr","title":"PFR","text":"<p>There will be no PFR (post flight review), just documentation on the website.</p>"},{"location":"Guidelines/PCB-Guide/","title":"PCB Guide","text":""},{"location":"Guidelines/PCB-Guide/#introduction","title":"Introduction","text":"<p>A Printed Circuit Board (PCB) is a crucial component in electronic devices. It provides a platform for connecting and supporting various electronic components, enabling the device to function properly. This guide will provide an overview of PCBs, their importance, and the key considerations when designing and manufacturing them.</p>"},{"location":"Guidelines/PCB-Guide/#table-of-contents","title":"Table of Contents","text":"<ul> <li>What is a PCB?</li> <li>PCB Design Considerations</li> <li>PCB Manufacturing Process</li> <li>Common PCB Issues and Troubleshooting</li> <li>Conclusion</li> </ul>"},{"location":"Guidelines/PCB-Guide/#what-is-a-pcb","title":"What is a PCB?","text":"<p>A PCB is a flat board made of non-conductive material, typically fiberglass, with conductive pathways etched or printed onto it. These pathways, known as traces, provide the electrical connections between different components on the board. PCBs can be single-sided, double-sided, or multi-layered, depending on the complexity of the circuit.</p>"},{"location":"Guidelines/PCB-Guide/#pcb-design-considerations","title":"PCB Design Considerations","text":"<p>Designing a PCB involves several considerations to ensure optimal performance and reliability. Some key factors to consider include:</p> <ul> <li>Component placement and orientation</li> <li>Trace routing and signal integrity</li> <li>Power and ground plane design</li> <li>Thermal management</li> <li>Design for manufacturability (DFM) guidelines</li> </ul> <p></p>"},{"location":"Guidelines/PCB-Guide/#pcb-manufacturing-process","title":"PCB Manufacturing Process","text":"<p>The PCB manufacturing process involves several steps, including:</p> <ol> <li>Designing the PCB layout using specialized software.</li> <li>Generating the Gerber files, which contain the necessary information for manufacturing.</li> <li>Fabricating the PCB by etching or printing the conductive traces onto the board.</li> <li>Drilling holes for component mounting.</li> <li>Applying solder mask and silkscreen for protection and labeling.</li> <li>Testing the PCB for functionality and quality assurance.</li> </ol> <p></p>"},{"location":"Guidelines/PCB-Guide/#common-pcb-issues-and-troubleshooting","title":"Common PCB Issues and Troubleshooting","text":"<p>PCBs can encounter various issues during manufacturing or operation. Some common issues include:</p> <ul> <li>Short circuits</li> <li>Open circuits</li> <li>Signal interference</li> <li>Component placement errors</li> <li>Soldering defects</li> </ul> <p>This section will provide troubleshooting tips and solutions for these common PCB issues.</p>"},{"location":"Guidelines/PCB-Guide/#conclusion","title":"Conclusion","text":"<p>PCBs are essential components in modern electronic devices, enabling the interconnection and functionality of various electronic components. Understanding the basics of PCB design and manufacturing is crucial for creating reliable and efficient electronic systems.</p> <p>For more detailed information and guidelines, refer to the specific sections in this guide.</p>"},{"location":"Guidelines/Rocket-Guide/","title":"Rocket Guide","text":"<p>This is where we will provide detailed info on the rocket, including its materials, how it's built and its flight. Check out the onshape for a view of it.</p> <p>The way this team works, is that we have a default template for everything including the rocket and the avionics. The teams are free to switch things and request special parts, but since most are beginners they just go with the default.</p>"},{"location":"Guidelines/Rocket-Guide/#components","title":"Components","text":"<p>We are using F motors. We decided to go with phenolic tubes. </p>"},{"location":"Guidelines/Rocket-Guide/#openrocket","title":"OpenRocket","text":"<p>By modeling their rocket in OpenRocket, teams can get an idea of the center of pressure and the center of gravity of their rocket, as well as the resulting stability. Additionally, running simulations with the model will yield graphs such as the one below, showing elements such as the velocity over time and the expected apogee point.</p> <p></p> <p>Below is an example of an acceptable OpenRocket model. The stability should be between 1 and 1.5 cal. The avionics is represented by a mass component of 85 grams.</p> <p></p>"},{"location":"Guidelines/Website-Contribution-Guide/","title":"How to contribute to this website","text":"<p>In this section we will be describing all the steps necessary in making a contribution to your teams section on this website. There will be a mac and a windows guide.</p>"},{"location":"Guidelines/Website-Contribution-Guide/#getting-started","title":"Getting Started","text":"<p>This website is hosted on github. </p> <p></p>"},{"location":"Guidelines/Website-Contribution-Guide/#mac","title":"Mac","text":"<p>(Coming soon!)</p>"},{"location":"Guidelines/Website-Contribution-Guide/#windows","title":"Windows","text":"<ol> <li>Have a computer with Windows 10/11.</li> <li>Install WSL using Powershell (run as administrator): <pre><code>wsl --install\n</code></pre></li> <li> <p>Install VS Code from this website.</p> <p>NOTE: From this point forward, all commands are run in the WSL terminal within VSCode, not Powershell or Windows Terminal. You can access this terminal by opening VSCode and clicking Terminal &gt; New Terminal from the dropdown menus in the top left of the screen.</p> </li> <li> <p>Edit the following commands to include your email and username, then run to update your Linux distro: <pre><code>sudo apt update\nsudo apt upgrade\ngit config --global --get user.email\ngit config --global --get user.name\n</code></pre></p> </li> <li>Run the following commands to install the necessary software.<ol> <li><pre><code>sudo apt install python3-pip\n</code></pre> This installs Pip, a package manager used for the next few installations.</li> <li><pre><code>pip install mkdocs-material\n</code></pre> This installs MKDocs, the site generator we use to create in Markdown (which is itself a programming language of sorts).</li> <li><pre><code>echo 'export PATH=$PATH:/home/YOUR_USERNAME_HERE/.local/bin' &gt;&gt; ~/.bashrc\n</code></pre> This adds the MKDocs install folder to your path, which informs WSL where your install is, and how to make use of it. Don't forget to replace YOUR_USERNAME_HERE with the username you created in step 2. </li> </ol> </li> <li>Make sure VSCode launches by default in WSL. To do this, hit ctrl+, on your keyboard to enter settings, and search for \"default profile\" at the top of the page. Find the setting for \"Terminal \u203a Integrated \u203a Default Profile: Windows\" and open the associated settings.json file. Paste the following line right below your workbench.colorTheme setting: <code>\"terminal.integrated.defaultProfile.windows\": \"Ubuntu (WSL)\",</code>. The json file should look similar to this:  Once complete, save everything and restart VSCode. </li> <li>Run this entire block of code at once in your VSCode terminal: <pre><code>type -p curl &gt;/dev/null || (sudo apt update &amp;&amp; sudo apt install curl -y)\ncurl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n&amp;&amp; sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n&amp;&amp; echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list &gt; /dev/null \\\n&amp;&amp; sudo apt update \\\n&amp;&amp; sudo apt install gh -y\n</code></pre> This installs GitHub inside your new Linux install which will allow you to fork, and eventually contribute to, the website. Check out this link for more information. </li> <li> <p>Clone the repo &amp; open it in VScode:  <pre><code>git clone https://github.com/zeulewan/marswebsite.git\ncd marswebsite\ncode .\n</code></pre> If all went well, your interface should look a lot like this. IMPORTANT: make sure the blue box in the bottom left corner says WSL: Ubuntu. If there are any issues with that, repeat step 6 </p> </li> <li> <p>Run this command: <pre><code>git config pull.rebase true\n</code></pre> This instructs GitHub to merge your changes with others in the event someone makes changes to the main branch while you're still editing yours. </p> </li> <li> <p>You're all set! Make contributions to your teams' subfolder under marswebsite &gt; docs &gt; Teams. Once ready to publish to the website, click on source control (the third one in this menu): </p> <p></p> <p>Then type a commit message into this box that describes what changes you're trying to make to the website. Once complete, hit the big blue commit button:</p> <p></p> <p>It's going to prompt you a few things, hit yes to everything including the popup that asks you to fork the repo. This allows you to publish your own version of the website which the MARS team can then review and combine into the main website. Click sync changes once the blue button changes.</p> </li> <li> <p>Go to your own personal repo on GitHub and click contribute, like so. Click sync fork before contribute, only necessary if you see a message saying your branch is behind the main branch:  Sync fork will open up a new button called \"create pull request\". Once you press that, the MARS team will see your changes and be able to merge them onto the website!</p> </li> </ol>"},{"location":"Guidelines/Website-Contribution-Guide/#things-we-forgot","title":"things we forgot","text":"<ol> <li>get github</li> <li>git config --global --get user.email git config --global --get user.name THis should be after the git clone step</li> </ol>"},{"location":"Research-and-Logistics/","title":"Overview","text":"<p>This is where we'll put the stuff for the research and logistics division. The goal is that everything here such as TVC, will be transferred to the guidelines section once the project is done.</p> <p>There are many aspects of MARS. Primarily our mission is to teach lower years about engineering, however our secondary goal is to expand our scope of knowledge to become better engineers ourselves. This section is for the MARS research division.</p>"},{"location":"Research-and-Logistics/TVC/","title":"TVC","text":"<p>Check out the onshape file. Stabilized rockets are fine, but guided rockets are not.</p>"},{"location":"Research-and-Logistics/TVC/#iteration-1","title":"Iteration 1","text":"<p>This is the first iteration for the TVC</p>"},{"location":"Research-and-Logistics/TVC/#iteration-2","title":"Iteration 2","text":""},{"location":"Research-and-Logistics/Tasks/","title":"Tasks","text":"<p>This is a list of things that need to be done. Some tasks have names beside them.</p>"},{"location":"Research-and-Logistics/Tasks/#admin","title":"Admin","text":"<ul> <li> Make roles for each team for the discord server<ul> <li> Team chats on discord</li> <li> Change discord name to real name</li> </ul> </li> <li> Each team gets assigned a lead<ul> <li> need a formal plan for this</li> </ul> </li> <li> Waitlist form</li> <li> Onboard graces, sharvani, nathaniel team (developer team)</li> <li> Buy stuff<ul> <li> LC budget</li> <li> P card</li> <li> starlink</li> <li> Cheq req everything else<ul> <li> Micro SD cards for teensys</li> <li> Home hardware switches</li> <li> Stand off pins from creatron</li> </ul> </li> </ul> </li> <li> Finalize competition date</li> <li> Create anonymous feedback page</li> <li> Get HAM radio licenses - Nikolai</li> <li> we need a way to keep track of what we've given to each team</li> <li> we need those space place glasses for the eclipse on april 8th</li> <li> Mount camera in rocketry room</li> <li> Mission statement write up<ul> <li> Research Division</li> <li> Competition</li> </ul> </li> </ul>"},{"location":"Research-and-Logistics/Tasks/#merch","title":"Merch","text":"<ul> <li> Stickers - Casper</li> <li> Sweaters - Nikolai</li> </ul>"},{"location":"Research-and-Logistics/Tasks/#website","title":"Website","text":"<ul> <li> Documentation<ul> <li> How to contribute to this website<ul> <li> mac guide</li> <li> container usage guide</li> <li> windows guide<ul> <li> refine it - Nate</li> </ul> </li> </ul> </li> <li> Ground Station - Ace</li> <li> TVC - Mizi</li> <li> Launch pad - Leo</li> <li> Avionics - Nathan</li> <li> Competition outline - Newt</li> </ul> </li> <li> Add domain name</li> <li> Add formatting</li> <li> Section for each team</li> </ul>"},{"location":"Research-and-Logistics/Tasks/#avionics","title":"Avionics","text":"<ul> <li> Connection diagram for avionics - Nathan</li> <li> Get small GPS antenna</li> <li> Ground station front end</li> <li> Avionics save data flash then to SD card orr</li> <li> Avionics states, low power, high power, dump</li> <li> MavLink with mission planner</li> <li> On board Cameras</li> </ul>"},{"location":"Research-and-Logistics/Tasks/#tutorials","title":"Tutorials","text":"<ul> <li> Figure out if DME can host</li> <li> Github</li> <li> Soldering</li> <li> coding</li> </ul>"},{"location":"Research-and-Logistics/Tasks/#structures","title":"Structures","text":"<p>The competition is on may 18th, but we should launch a test rocket on April 20th at CRC. - [ ] Secure motors in place (end retainer)  - [ ] method of cutting phenolic tubes - [ ] settle on fin material - [ ] Build a test rocket     - [ ] 3d print nose     - [ ] fins</p>"},{"location":"Teams/","title":"Meet The Teams","text":"<p>Teams are free to keep their code closed source until after the competition.</p> Loading..."},{"location":"Teams/ICARUS/","title":"ICARUS","text":"<p>This is ICARUS. They are a team. This is the link to the team drive</p>"},{"location":"Teams/Lockheed-Interns/","title":"Index","text":"<p>This is Lockheed Interns at the PDR.</p>"},{"location":"Teams/Los-Alamos-Laboratory/","title":"Index","text":"<p>This is Los Alamos Laboratory at the PDR.</p>"},{"location":"Teams/Lunar-Wolves/","title":"Index","text":"<p>This is the Lunar Wolves team at the PDR.</p>"},{"location":"Teams/OsaTech/","title":"Index","text":"<p> This is OsaTech at the PDR.</p>"},{"location":"Teams/Planetes/","title":"Planetes","text":""},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/2024/02/16/pcb-update/","title":"PCB Update","text":"<p>Hey guys! PCB avionics finished. It's been ordered and is on the way. You guys get to solder it in a bit when we confirm the stuff works. Have a goodnight I kinda spent a long time on this</p> <p>Nathan Liu</p>"},{"location":"blog/2024/02/05/weekly-general-meetings/","title":"Weekly General Meetings","text":"<p>Rocketry room 10AM Tuesdays! (and online on discord) Bao suggested we start having weekly general meetings, and I think this is a great idea. We will try to make the meetings as efficient as possible by having an agenda that we go through, and time afterwards for random discussions. We will first go through team updates, then we will assign tasks. The tasks list is on the drive, and on the website.</p>"},{"location":"blog/2024/01/15/preliminary-design-review-pdr/","title":"Preliminary Design Review (PDR)","text":"<p> Today we successfully hosted the preliminary design reviews. Four out of the 9 currently registered teams showed up. There is one more on friday. </p>"},{"location":"blog/2024/01/17/updates-for-jan-17th/","title":"Updates for Jan 17th","text":"<p>More commits were made to the website today. I accepted a pull request from ICARUS, who added their image to the teams section. The tasks section was updated to include all the little things we have to work on. Documentation for the avionics was worked on, Nikolai wrote down all of the connection for the break out boards on the default flight computer. Oscar submitted all the P card requests (see image below), and we are planning to have a meeting with Alessia this friday or monday.</p> <p></p>"},{"location":"blog/2024/01/18/updates-for-jan-18th/","title":"Updates for Jan 18th","text":"<p>Minor edits made to the website, including the addition/onboarding of a new helping hand for development and documentation (hi Mom!). More edits will be forthcoming shortly as we begin to build our guides. </p>"},{"location":"blog/2024/01/23/updates-for-jan-23rd/","title":"Updates for Jan 23rd","text":"<p>We have officially placed orders for everything in the BOM. We spent about $7000. We had an issue with ordering the starlink so Alessia will be ordering it soon. The absolute latest things will come by is March 5th.</p>"},{"location":"blog/2024/01/30/team-update/","title":"Team update","text":"<p>There will now be a message posted to discord whenever the blog is updated! This will be the first post that does this. </p> <p>The fuselages, and motor tubes, and a few other things have arrived! We have already given out fuselages to a ICARUS and Lunar Wolves. We will be in contact shortly with each team to give out the fuses. </p> <p> Here's a photo of me picking up the packages. Photo cred to Nikolai.</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/info/","title":"Info","text":""}]}